package com.wipro.app;
//A class to represent a node of a linked list
class Node {
 // Data field to store the value of the node
 int data;
 // Next field to store the reference to the next node
 Node next;
 // Constructor to initialize the node with a given value
 Node(int data) {
     this.data = data;
     this.next = null;
 }
}

//A class to represent a linked list
class LinkedList {
 // Head field to store the reference to the first node
 Node head;
 // Constructor to initialize the linked list with an empty node
 LinkedList() {
     head = null;
 }
 // A method to insert a new node at the end of the linked list
 public void insert(int data) {
     // Create a new node with the given data
     Node newNode = new Node(data);
     // If the linked list is empty, make the new node the head
     if (head == null) {
         head = newNode;
     } else {
         // Otherwise, traverse the linked list until the last node
         Node current = head;
         while (current.next != null) {
             current = current.next;
         }
         // Make the new node the next of the last node
         current.next = newNode;
     }
 }
 // A method to print the elements of the linked list
 public void print() {
     // If the linked list is empty, print a message
     if (head == null) {
         System.out.println("The linked list is empty");
     } else {
         // Otherwise, traverse the linked list and print the data of each node
         Node current = head;
         while (current != null) {
             System.out.print(current.data + " -> ");
             current = current.next;
         }
         // Print null at the end to indicate the end of the list
         System.out.println("null");
     }
 }
}


